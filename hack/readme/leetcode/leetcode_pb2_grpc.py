# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from hack.readme.leetcode import leetcode_pb2 as hack_dot_readme_dot_leetcode_dot_leetcode__pb2


class LeetcodeServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
            '/login.LeetcodeService/Login',
            request_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.LoginRequest.SerializeToString,
            response_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.FromString,
        )
        self.ListAllProblems = channel.unary_unary(
            '/login.LeetcodeService/ListAllProblems',
            request_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.ListAllProblemsRequest.SerializeToString,
            response_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.FromString,
        )
        self.QueryProblem = channel.unary_unary(
            '/login.LeetcodeService/QueryProblem',
            request_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.QueryProblemRequest.SerializeToString,
            response_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.FromString,
        )


class LeetcodeServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Login(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllProblems(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryProblem(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LeetcodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Login': grpc.unary_unary_rpc_method_handler(
            servicer.Login,
            request_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.LoginRequest.FromString,
            response_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.SerializeToString,
        ),
        'ListAllProblems': grpc.unary_unary_rpc_method_handler(
            servicer.ListAllProblems,
            request_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.ListAllProblemsRequest.FromString,
            response_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.SerializeToString,
        ),
        'QueryProblem': grpc.unary_unary_rpc_method_handler(
            servicer.QueryProblem,
            request_deserializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.QueryProblemRequest.FromString,
            response_serializer=hack_dot_readme_dot_leetcode_dot_leetcode__pb2.Response.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'login.LeetcodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
